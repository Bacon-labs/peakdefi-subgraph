enum CyclePhase {
  INTERMISSION
  MANAGE
}

enum VoteDirection {
  EMPTY
  FOR
  AGAINST
}

type Manager @entity {
  id: ID! # address
  kairoBalance: BigDecimal!
  kairoBalanceWithStake: BigDecimal!
  baseStake: BigDecimal!
  riskTaken: BigDecimal!
  riskThreshold: BigDecimal!
  lastCommissionRedemption: BigInt!
  basicOrders: [BasicOrder!]!
  compoundOrders: [CompoundOrder!]!
  fulcrumOrders: [FulcrumOrder!]!
  commissionHistory: [CommissionRedemption!]!
  totalCommissionReceived: BigDecimal!
  upgradeSignal: Boolean!
  votes: [VoteDirection!]!
}

type BasicOrder @entity {
  id: ID! # index in userInvestments[user] array + cycleNumber
  idx: BigInt!
  tokenAddress: String!
  cycleNumber: BigInt!
  stake: BigDecimal!
  tokenAmount: BigDecimal!
  rawTokenAmount: BigInt!
  buyPrice: BigDecimal!
  sellPrice: BigDecimal!
  buyTime: BigInt!
  sellTime: BigInt!
  isSold: Boolean!
  owner: String!
}

type CompoundOrder @entity {
  id: ID! # index in userCompoundOrders[user] array + cycleNumber
  idx: BigInt!
  tokenAddress: String!
  cycleNumber: BigInt!
  stake: BigDecimal!
  collateralAmountInDAI: BigDecimal!
  collateralRatio: BigDecimal!
  currProfit: BigDecimal!
  currCollateral: BigDecimal!
  currBorrow: BigDecimal!
  currCash: BigDecimal!
  marketCollateralFactor: BigDecimal!
  outputAmount: BigDecimal!
  buyTime: BigInt!
  sellTime: BigInt!
  isSold: Boolean!
  isShort: Boolean!
  orderAddress: String!
  owner: String!
}

type FulcrumOrder @entity {
  id: ID! # index in userInvestments[user] array + cycleNumber
  idx: BigInt!
  tokenAddress: String!
  cycleNumber: BigInt!
  stake: BigDecimal!
  tokenAmount: BigDecimal!
  rawTokenAmount: BigInt!
  buyPrice: BigDecimal!
  sellPrice: BigDecimal! # unit is underlyingToken/pToken
  liquidationPrice: BigDecimal! # unit is underlyingToken/pToken
  buyTime: BigInt!
  sellTime: BigInt!
  isSold: Boolean!
  isShort: Boolean!
  owner: String!
}

type CommissionRedemption @entity {
  id: ID! # tx hash
  timestamp: BigInt!
  cycleNumber: BigInt!
  amountInDAI: BigDecimal!
  txHash: String!
}

type Investor @entity {
  id: ID! # address
  sharesBalance: BigDecimal!
  depositWithdrawHistory: [DepositWithdraw!]!
}

type DepositWithdraw @entity {
  id: ID! # tx hash
  timestamp: BigInt!
  isDeposit: Boolean!
  amountInDAI: BigDecimal!
  txHash: String!
}

type Fund @entity {
  id: ID! # always BetokenFund
  address: String!
  cycleNumber: BigInt!
  cyclePhase: CyclePhase!
  startTimeOfCyclePhase: BigInt!
  totalFundsInDAI: BigDecimal!
  totalFundsAtPhaseStart: BigDecimal!
  kairoPrice: BigDecimal!
  kairoTotalSupply: BigDecimal!
  sharesPrice: BigDecimal!
  sharesTotalSupply: BigDecimal!
  sharesPriceHistory: [DataPoint!]!
  aum: BigDecimal!
  aumHistory: [DataPoint!]!
  cycleTotalCommission: BigDecimal!
  managers: [Manager!]!
  lastProcessedBlock: BigInt!
  # upgrade governance related
  hasFinalizedNextVersion: Boolean!
  upgradeVotingActive: Boolean!
  nextVersion: String!
  proposers: [String!]!
  candidates: [String!]!
  forVotes: [BigDecimal!]!
  againstVotes: [BigDecimal!]!
  upgradeSignalStrength: BigDecimal!
}

type DataPoint @entity {
  id: ID! # timestamp
  timestamp: BigInt!
  value: BigDecimal!
}